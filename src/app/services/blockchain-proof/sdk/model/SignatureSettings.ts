/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Blockchain Proof
 *
 * OpenAPI spec version: 0.10
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
/* tslint:disable */

/**
 * How to calculate the signature
 */
export interface SignatureSettings {
    /**
     * An alternate base64Secret key that overrides the value in your configuration in base64. Used for generating a signature with a base64Secret
     */
    base64Secret?: string;
    /**
     * Only use this if you calculate your own signature. Otherwise always leave this blank! We will use the signature as is for registration/verification
     */
    suppliedSignature?: string;
    /**
     * How to calculate the signature during registration and verification. Defaults to the configured value if omitted
     */
    signatureType: SignatureSettings.SignatureTypeEnum;
    /**
     * Use a symmetric or asymmetric key from the crypto keys API to generate the signature.
     */
    keyId?: string;
}
export namespace SignatureSettings {
    export type SignatureTypeEnum = 'KEY_ID' | 'SUPPLIED' | 'SECRET' | 'NONE';
    export const SignatureTypeEnum = {
        KEYID: 'KEY_ID' as SignatureTypeEnum,
        SUPPLIED: 'SUPPLIED' as SignatureTypeEnum,
        SECRET: 'SECRET' as SignatureTypeEnum,
        NONE: 'NONE' as SignatureTypeEnum
    };
}
