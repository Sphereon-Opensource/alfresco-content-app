/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Blockchain Proof
 *
 * OpenAPI spec version: 0.10
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
/* tslint:disable */

/**
 * Commited Entry
 */
export interface CommittedEntry {
    /**
     * The registration time of the entry. Only when registration has occurred ofcourse
     */
    registrationTime?: Date;
    /**
     * Chain Id
     */
    chainId?: string;
    /**
     * The context
     */
    context?: string;
    /**
     * The registration state of the entry
     */
    registrationState: CommittedEntry.RegistrationStateEnum;
    /**
     * This is the signature state.
     */
    signatureState?: CommittedEntry.SignatureStateEnum;
    /**
     * This is a message describing the signature state.
     */
    signatureStateMessage?: string;
    /**
     * The entry Id for the registration
     */
    entryId: string;
}
export namespace CommittedEntry {
    export type RegistrationStateEnum = 'NOT_REGISTERED' | 'PENDING' | 'REGISTERED';
    export const RegistrationStateEnum = {
        NOTREGISTERED: 'NOT_REGISTERED' as RegistrationStateEnum,
        PENDING: 'PENDING' as RegistrationStateEnum,
        REGISTERED: 'REGISTERED' as RegistrationStateEnum
    };
    export type SignatureStateEnum = 'not found' | 'unsigned' | 'invalid' | 'verified';
    export const SignatureStateEnum = {
        NotFound: 'not found' as SignatureStateEnum,
        Unsigned: 'unsigned' as SignatureStateEnum,
        Invalid: 'invalid' as SignatureStateEnum,
        Verified: 'verified' as SignatureStateEnum
    };
}
